[{"path":"https://ui-research.github.io/climateapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 climateapi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ui-research.github.io/climateapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Curran-Groome. Author, maintainer.","code":""},{"path":"https://ui-research.github.io/climateapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Curran-Groome W (2025). climateapi: Climate (adjacent) data functions C&C practice area. R package version 0.0.0.9001, https://ui-research.github.io/climateapi/.","code":"@Manual{,   title = {climateapi: Climate (and adjacent) data and functions for the C&C practice area},   author = {Will Curran-Groome},   year = {2025},   note = {R package version 0.0.0.9001},   url = {https://ui-research.github.io/climateapi/}, }"},{"path":"https://ui-research.github.io/climateapi/index.html","id":"climateapi","dir":"","previous_headings":"","what":"Climate (and adjacent) data and functions for the C&C practice area","title":"Climate (and adjacent) data and functions for the C&C practice area","text":"goal library(climateapi) minimize repeated data cleaning wrangling enable project teams devote time substantive analysis inference-making. package works toward goal creating unified interface common datasets data manipulation tasks. Functions () support climate-specific datasets well climate-adjacent.","code":""},{"path":"https://ui-research.github.io/climateapi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Climate (and adjacent) data and functions for the C&C practice area","text":"can install development version climateapi GitHub :","code":"# install.packages(\"renv\") renv::install(\"UI-Research/climateapi\")"},{"path":"https://ui-research.github.io/climateapi/index.html","id":"the-climateapi-package-at-work","dir":"","previous_headings":"","what":"The climateapi package at work:","title":"Climate (and adjacent) data and functions for the C&C practice area","text":"","code":"library(climateapi) library(urbnindicators) library(sf) library(tidyverse) library(urbnthemes) set_urbn_defaults(style = \"print\") county_disaster_declarations = get_fema_disaster_declarations_county(api = TRUE)  county_disaster_declarations %>%   filter(stringr::str_detect(GEOID, \"^01\")) %>% ## Alabama   group_by(year_declared) %>%     summarize(annual_incidents = sum(incidents_all, na.rm = TRUE)) %>%   ggplot() +     geom_col(aes(x = year_declared, y = annual_incidents)) +     labs(       title = \"COVID Results in a Spike of Counties with Disaster Declarations in 2020\",       subtitle = \"Sum of major disaster declarations per Alabama county, by year\",       x = \"\",       y = \"\") +     theme_urbn_print() wildfire_perimeters = get_current_fire_perimeters() %>%   arrange(desc(incident_size_acres)) %>%   slice(1) %>%   st_transform(5070)  impacted_structures = get_structures(   boundaries = wildfire_perimeters,   geography = \"tract\")  us_tracts_sf = tigris::tracts(cb = TRUE, year = 2023, progress_bar = FALSE) %>%   sf::st_transform(5070)  tracts_sf = us_tracts_sf %>%   sf::st_filter(wildfire_perimeters %>% st_transform(5070) %>% st_buffer(10000)) %>%   dplyr::select(GEOID) %>%   dplyr::left_join(     impacted_structures %>%        dplyr::filter(occupancy_class == \"Residential\") %>%       dplyr::group_by(GEOID) %>%       dplyr::summarize(residential_units = sum(count, na.rm = TRUE)),      by = \"GEOID\") %>%   dplyr::mutate(county_fips = stringr::str_sub(GEOID, 1, 5)) %>%   dplyr::left_join(     tidycensus::fips_codes %>%        dplyr::mutate(county_fips = stringr::str_c(state_code, county_code)),      by = c(\"county_fips\"))  ggplot() +   geom_sf(data = tracts_sf, aes(fill = residential_units), linewidth = .6) +     scale_fill_continuous(na.value = \"darkgrey\") +   geom_sf(     data = tracts_sf %>% group_by(county_fips) %>% summarize(),      fill = NA,      color = \"black\",     linewidth = .75) +   geom_sf(data = wildfire_perimeters, fill = NA, color = palette_urbn_magenta[5], linewidth = .75) +   labs(     title = \"Estimated Residential Units within Wildfire Boundaries\",     subtitle = str_c(       \"Incident Name: \", wildfire_perimeters$incident_name, \"\\n\",       \"State(s): \", paste(         tracts_sf %>%            dplyr::filter(!is.na(residential_units)) %>%            dplyr::distinct(state_name) %>%           dplyr::pull(), collapse = \", \"), \"\\n\",       \"Incident Size: \", round(wildfire_perimeters$incident_size_acres, 0), \" acres\", \"\\n\",       \"Intersecting Tracts: \", nrow(tracts_sf %>% dplyr::filter(!is.na(residential_units)))),     fill = \"Residential units\") +   theme_urbn_map()"},{"path":"https://ui-research.github.io/climateapi/reference/convert_delimited_to_parquet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw data to parquet to conserve memory / speed subsequent operations — convert_delimited_to_parquet","title":"Convert raw data to parquet to conserve memory / speed subsequent operations — convert_delimited_to_parquet","text":"Convert raw data parquet conserve memory / speed subsequent operations","code":""},{"path":"https://ui-research.github.io/climateapi/reference/convert_delimited_to_parquet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw data to parquet to conserve memory / speed subsequent operations — convert_delimited_to_parquet","text":"","code":"convert_delimited_to_parquet(   inpath,   outpath = NULL,   delimit_character = \",\",   subsetted_columns = NULL,   dataset = NULL )"},{"path":"https://ui-research.github.io/climateapi/reference/convert_delimited_to_parquet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw data to parquet to conserve memory / speed subsequent operations — convert_delimited_to_parquet","text":"inpath local path read CSV data . outpath local path write parquet data . delimit_character delimiting character raw data. subsetted_columns columns include outputted parquet data. dataset One c(\"nfip_policies\", \"ihp_registrations\"). null, used select columns returned.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/convert_delimited_to_parquet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw data to parquet to conserve memory / speed subsequent operations — convert_delimited_to_parquet","text":"Nothing. Parquet data written local path.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_units_per_parcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the number and types of structures per parcel — estimate_units_per_parcel","title":"Estimate the number and types of structures per parcel — estimate_units_per_parcel","text":"Estimate number types structures per parcel","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_units_per_parcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the number and types of structures per parcel — estimate_units_per_parcel","text":"","code":"estimate_units_per_parcel(structures, parcels, zoning, acs = NULL)"},{"path":"https://ui-research.github.io/climateapi/reference/estimate_units_per_parcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the number and types of structures per parcel — estimate_units_per_parcel","text":"structures dataset returned get_structure(). parcels spatial (polygon) dataset. zoning spatial (polygon) zoning dataset. acs Optionally, non-spatial dataset, tract level, returned urbnindicators::compile_acs_data().","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_units_per_parcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the number and types of structures per parcel — estimate_units_per_parcel","text":"inputted parcels datasets attributes describing estimated unit counts unit type.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_zoning_envelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","title":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","text":"Calculate number units allowed parcel","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_zoning_envelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","text":"","code":"estimate_zoning_envelope(   parcels,   development_size_maximum = 300,   standard_unit_sqft_multifamily = 1000,   standard_parking_stall_sqft = 325,   parking_model = \"singlestory\" )"},{"path":"https://ui-research.github.io/climateapi/reference/estimate_zoning_envelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","text":"parcels dataframe containing parcel-level attributes zoning regulations development_size_maximum cap number units can developed parcel. Note larger values increase length computation. standard_unit_sqft_multifamily square footage standard multifamily unit standard_parking_stall_sqft square footage standard parking space parking_model One c(\"singlestory\", \"multistory\"). model parking requirements: stalls ground floor distributed vertically?","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_zoning_envelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","text":"input parcels dataframe additional column, maximum_development_capacity_zoned, contains maximum number units can developed parcel per zoning regulations","code":""},{"path":"https://ui-research.github.io/climateapi/reference/estimate_zoning_envelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the number of units allowed on a parcel — estimate_zoning_envelope","text":"","code":"df = tibble::tibble(  parcel_id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),  parcel_area_sqft = c(1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000),  setback_front = c(10),  setback_rear = c(10),  setback_side = c(10),  parcel_area_sqft_minimum = c(1000, 1000, 1000, 1000, 1000, 5000, 5000, 5000, 5000, 5000),  units_per_parcel_maximum = c(10),  units_per_acre_maximum = NA,  parcel_coverage_percent_maximum = c(70),  parcel_coverage_percent_maximum_building = c(70),  open_space_ratio_minimum = c(0.2),  floor_area_ratio_maximum = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5),  height_stories_maximum = c(3, 3, 3, 3, 3, 5, 5, 5, 5, 5),  height_feet_maximum = NA,  parking_stalls_per_parcel_minimum = c(1),  parking_stalls_per_unit_minimum = c(2, 2, 2, 2, 2, 1, 1, 1, 1, 1))   estimate_zoning_envelope(    parcels = df) #> # A tibble: 10 × 30 #>    parcel_id parcel_area_sqft setback_front setback_rear setback_side #>        <dbl>            <dbl>         <dbl>        <dbl>        <dbl> #>  1         1             1000            10           10           10 #>  2         2             2000            10           10           10 #>  3         3             3000            10           10           10 #>  4         4             4000            10           10           10 #>  5         5             5000            10           10           10 #>  6         6             6000            10           10           10 #>  7         7             7000            10           10           10 #>  8         8             8000            10           10           10 #>  9         9             9000            10           10           10 #> 10        10            10000            10           10           10 #> # ℹ 25 more variables: parcel_area_sqft_minimum <dbl>, #> #   units_per_parcel_maximum <dbl>, units_per_acre_maximum <lgl>, #> #   parcel_coverage_percent_maximum <dbl>, #> #   parcel_coverage_percent_maximum_building <dbl>, #> #   open_space_ratio_minimum <dbl>, floor_area_ratio_maximum <dbl>, #> #   height_stories_maximum <dbl>, height_feet_maximum <lgl>, #> #   parking_stalls_per_parcel_minimum <dbl>, …"},{"path":"https://ui-research.github.io/climateapi/reference/get_box_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the path to the C&C Box folder — get_box_path","title":"Get the path to the C&C Box folder — get_box_path","text":"Get path C&C Box folder","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_box_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the path to the C&C Box folder — get_box_path","text":"","code":"get_box_path()"},{"path":"https://ui-research.github.io/climateapi/reference/get_box_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the path to the C&C Box folder — get_box_path","text":"filepath C&C Box folder","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_box_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the path to the C&C Box folder — get_box_path","text":"","code":"if (FALSE) { # \\dontrun{ get_box_path() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_business_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain County Business Patterns (CBP) Estimates per County — get_business_patterns","title":"Obtain County Business Patterns (CBP) Estimates per County — get_business_patterns","text":"Obtain County Business Patterns (CBP) Estimates per County","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_business_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain County Business Patterns (CBP) Estimates per County — get_business_patterns","text":"","code":"get_business_patterns()"},{"path":"https://ui-research.github.io/climateapi/reference/get_business_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain County Business Patterns (CBP) Estimates per County — get_business_patterns","text":"tibble data county-level employees, employers, aggregate annual payrolls industry employer size","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_business_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain County Business Patterns (CBP) Estimates per County — get_business_patterns","text":"","code":"if (FALSE) { # \\dontrun{ get_business_patterns() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_current_fire_perimeters.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquire wildfire perimeters — get_current_fire_perimeters","title":"Acquire wildfire perimeters — get_current_fire_perimeters","text":"Acquire wildfire perimeters","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_current_fire_perimeters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquire wildfire perimeters — get_current_fire_perimeters","text":"","code":"get_current_fire_perimeters(   geography = NULL,   file_path = NULL,   bbox = NULL,   api = TRUE )"},{"path":"https://ui-research.github.io/climateapi/reference/get_current_fire_perimeters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquire wildfire perimeters — get_current_fire_perimeters","text":"geography Included API consistency; must NULL. file_path Included API consistency; must NULL. bbox Optionally, sf::st_bbox() object, object can converted . api Included API consistency; must TRUE.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_current_fire_perimeters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Acquire wildfire perimeters — get_current_fire_perimeters","text":"library(sf) enabled dataframe comprising perimeters current wildfires.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_current_fire_perimeters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acquire wildfire perimeters — get_current_fire_perimeters","text":"","code":"if (FALSE) { # \\dontrun{ get_current_fire_perimeters() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_dataset_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the raw column names for a specified dataset — get_dataset_columns","title":"Get the raw column names for a specified dataset — get_dataset_columns","text":"Get raw column names specified dataset","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_dataset_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the raw column names for a specified dataset — get_dataset_columns","text":"","code":"get_dataset_columns(dataset)"},{"path":"https://ui-research.github.io/climateapi/reference/get_dataset_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the raw column names for a specified dataset — get_dataset_columns","text":"dataset name dataset. One c('nfip_policies', 'ihp_registrations').","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_dataset_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the raw column names for a specified dataset — get_dataset_columns","text":"vector raw column names selected specified dataset","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_fema_disaster_declarations_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Get major disaster declarations by county — get_fema_disaster_declarations_county","title":"Get major disaster declarations by county — get_fema_disaster_declarations_county","text":"Get major disaster declarations county","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_fema_disaster_declarations_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get major disaster declarations by county — get_fema_disaster_declarations_county","text":"","code":"get_fema_disaster_declarations_county(   geography = \"county\",   file_path = file.path(get_box_path(), \"hazards\", \"fema\", \"disaster-declarations\",     \"raw\", \"fema_disaster_declarations_county_2024_10_25.csv\"),   api = TRUE )"},{"path":"https://ui-research.github.io/climateapi/reference/get_fema_disaster_declarations_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get major disaster declarations by county — get_fema_disaster_declarations_county","text":"geography Included API consistency ; must county. file_path path (Box) file containing raw data. api TRUE (default), access data API. Else, read locally file_path.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_fema_disaster_declarations_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get major disaster declarations by county — get_fema_disaster_declarations_county","text":"dataframe comprising Major Disaster Declarations month year county.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_fema_disaster_declarations_county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get major disaster declarations by county — get_fema_disaster_declarations_county","text":"","code":"if (FALSE) { # \\dontrun{ get_fema_disaster_declarations_county(   api = TRUE) } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_government_finances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get government unit-level expenses from the Census of Governments — get_government_finances","title":"Get government unit-level expenses from the Census of Governments — get_government_finances","text":"Get government unit-level expenses Census Governments","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_government_finances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get government unit-level expenses from the Census of Governments — get_government_finances","text":"","code":"get_government_finances(year = 2022)"},{"path":"https://ui-research.github.io/climateapi/reference/get_government_finances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get government unit-level expenses from the Census of Governments — get_government_finances","text":"year four-digit year. default 2022.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_government_finances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get government unit-level expenses from the Census of Governments — get_government_finances","text":"dataframe containing government unit-level expenses specified year.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_ihp_registrations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","title":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","text":"Get Individuals Households Program (IHP) registrations","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_ihp_registrations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","text":"","code":"get_ihp_registrations(   geography = NULL,   state_fips,   file_name = \"IndividualsAndHouseholdsProgramValidRegistrations_2024_10_13.parquet\",   api = TRUE,   outpath = NULL )"},{"path":"https://ui-research.github.io/climateapi/reference/get_ihp_registrations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","text":"geography Included API consistency; must NULL. state_fips character vector two-digit state codes. file_name name (full path) Box file containing raw data. api TRUE (default), query API. outpath path save parquet-formatted datafile. Applicable api = FALSE.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_ihp_registrations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","text":"dataframe comprising county-level data current NFIP policies","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_ihp_registrations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Individuals and Households Program (IHP) registrations — get_ihp_registrations","text":"","code":"if (FALSE) { # \\dontrun{ get_ihp_registrations(    county_geoids = c(\"01001\", \"01003\"),    api = TRUE) } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_nfip_policies_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Access county-level data on NFIP policies — get_nfip_policies_county","title":"Access county-level data on NFIP policies — get_nfip_policies_county","text":"Access county-level data NFIP policies","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_nfip_policies_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access county-level data on NFIP policies — get_nfip_policies_county","text":"","code":"get_nfip_policies_county(   county_geoids,   file_name = \"fima_nfip_policies_2024_10_13.parquet\",   api = TRUE )"},{"path":"https://ui-research.github.io/climateapi/reference/get_nfip_policies_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access county-level data on NFIP policies — get_nfip_policies_county","text":"county_geoids character vector five-digit county codes. file_name name (full path) Box file containing raw data. api TRUE (default), query API.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_nfip_policies_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access county-level data on NFIP policies — get_nfip_policies_county","text":"dataframe comprising county-level data current NFIP policies","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_nfip_policies_county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access county-level data on NFIP policies — get_nfip_policies_county","text":"","code":"if (FALSE) { # \\dontrun{ get_nfip_policies_county(    county_geoids = c(\"01001\", \"01003\"),    api = TRUE) } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_sba_loans.html","id":null,"dir":"Reference","previous_headings":"","what":"Access SBA data on disaster loans — get_sba_loans","title":"Access SBA data on disaster loans — get_sba_loans","text":"Access SBA data disaster loans","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_sba_loans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access SBA data on disaster loans — get_sba_loans","text":"","code":"get_sba_loans()"},{"path":"https://ui-research.github.io/climateapi/reference/get_sba_loans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access SBA data on disaster loans — get_sba_loans","text":"dataframe comprising city- zip-level data SBA loanmaking","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_sba_loans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access SBA data on disaster loans — get_sba_loans","text":"","code":"if (FALSE) { # \\dontrun{ get_sba_loans() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_sheldus_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","title":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","text":"Access temporal county-level SHELDUS hazard counts.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_sheldus_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","text":"","code":"get_sheldus_county(   geography = \"county\",   file_path = file.path(get_box_data_path(), \"hazards\", \"sheldus\",     \"SHELDUS_22.0_01012916_01012023_AllCounties_CountyAggregate_YearMonth_2022USD\",     \"UID14148f_AGG_A.csv\"),   api = FALSE )"},{"path":"https://ui-research.github.io/climateapi/reference/get_sheldus_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","text":"geography Required – geography data aggregated? Must county. file_path path read dataset api = FALSE. api Included consistency; must FALSE.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_sheldus_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","text":"dataframe comprising month x year x county counts hazard events.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_sheldus_county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access temporal county-level SHELDUS hazard counts. — get_sheldus_county","text":"","code":"if (FALSE) { # \\dontrun{ get_sheldus_county() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_spatial_extent_census.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Census geographies that overlap with the input spatial dataset — get_spatial_extent_census","title":"Get the Census geographies that overlap with the input spatial dataset — get_spatial_extent_census","text":"Get Census geographies overlap input spatial dataset","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_spatial_extent_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Census geographies that overlap with the input spatial dataset — get_spatial_extent_census","text":"","code":"get_spatial_extent_census(data, return_geometry = FALSE)"},{"path":"https://ui-research.github.io/climateapi/reference/get_spatial_extent_census.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Census geographies that overlap with the input spatial dataset — get_spatial_extent_census","text":"data sf-formatted dataframe return_geometry Logical. Include geometries returned geographies?","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_spatial_extent_census.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Census geographies that overlap with the input spatial dataset — get_spatial_extent_census","text":"dataframe (optionally, sf-dataframe) comprising Census geographies","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_structures.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate counts of hazard-impacted structures by structure type — get_structures","title":"Estimate counts of hazard-impacted structures by structure type — get_structures","text":"Estimate counts hazard-impacted structures structure type","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_structures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate counts of hazard-impacted structures by structure type — get_structures","text":"","code":"get_structures(boundaries, geography = \"county\", keep_structures = FALSE)"},{"path":"https://ui-research.github.io/climateapi/reference/get_structures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate counts of hazard-impacted structures by structure type — get_structures","text":"boundaries POLYGON MULTIPOLYGON object, sf::st_bbox()-style bbox. geography desired geography results. One \"tract\" \"county\". keep_structures Logical. TRUE, raw structure data returned alongside summarized data.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_structures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate counts of hazard-impacted structures by structure type — get_structures","text":"dataframe comprising estimated counts structure type, specified geography, geographic units intersecting boundaries object. keep_structure = TRUE, returns list two elements: summarized data raw structure data.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_structures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate counts of hazard-impacted structures by structure type — get_structures","text":"","code":"if (FALSE) { # \\dontrun{ get_structures(   geography = \"tract\",   boundaries = tigris::states(cb = TRUE) %>% dplyr::filter(stringr::str_detect(NAME, \"District\"))) } # }"},{"path":"https://ui-research.github.io/climateapi/reference/get_system_username.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's username — get_system_username","title":"Get the user's username — get_system_username","text":"Get user's username","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_system_username.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's username — get_system_username","text":"","code":"get_system_username()"},{"path":"https://ui-research.github.io/climateapi/reference/get_system_username.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's username — get_system_username","text":"username user running script","code":""},{"path":"https://ui-research.github.io/climateapi/reference/get_system_username.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's username — get_system_username","text":"","code":"if (FALSE) { # \\dontrun{ get_system_username() } # }"},{"path":"https://ui-research.github.io/climateapi/reference/interpolate_demographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate tract-level sociodemographic data to zoning polygons — interpolate_demographics","title":"Interpolate tract-level sociodemographic data to zoning polygons — interpolate_demographics","text":"Interpolate tract-level sociodemographic data zoning polygons","code":""},{"path":"https://ui-research.github.io/climateapi/reference/interpolate_demographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate tract-level sociodemographic data to zoning polygons — interpolate_demographics","text":"","code":"interpolate_demographics(   zones_sf,   sociodemographic_tracts_sf = NULL,   id_column,   weights = \"population\" )"},{"path":"https://ui-research.github.io/climateapi/reference/interpolate_demographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate tract-level sociodemographic data to zoning polygons — interpolate_demographics","text":"zones_sf spatial (sf) dataset defining zoning districts. sociodemographic_tracts_sf (optional) tract level spatial (sf) dataset resulting urbnindicators. NULL, function run behind scenes appropriate tracts. id_column name column zones_sf identifies unique combination zoning regulations. weights One c(\"population\", \"housing\"). variable used weight interpolation.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/interpolate_demographics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate tract-level sociodemographic data to zoning polygons — interpolate_demographics","text":"spatial (sf) dataset comprising one observation level id_column interpolated values taken sociodemographic_tracts_sf.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/polygons_to_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert polygons into their component linestrings — polygons_to_linestring","title":"Convert polygons into their component linestrings — polygons_to_linestring","text":"Convert polygons component linestrings","code":""},{"path":"https://ui-research.github.io/climateapi/reference/polygons_to_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert polygons into their component linestrings — polygons_to_linestring","text":"","code":"polygons_to_linestring(.sf)"},{"path":"https://ui-research.github.io/climateapi/reference/polygons_to_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert polygons into their component linestrings — polygons_to_linestring","text":".sf spatial dataframe containing one polygons","code":""},{"path":"https://ui-research.github.io/climateapi/reference/polygons_to_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert polygons into their component linestrings — polygons_to_linestring","text":"simple feature collection linestrings derived inputted polygons; attributes retained, two new attributes–polygon_id line_id–prepended output","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_define_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill in missing and non-missing values across interrelated survey questions — qualtrics_define_missing","title":"Fill in missing and non-missing values across interrelated survey questions — qualtrics_define_missing","text":"Fill missing non-missing values across interrelated survey questions","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_define_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill in missing and non-missing values across interrelated survey questions — qualtrics_define_missing","text":"","code":"qualtrics_define_missing(   df,   question_code_include,   question_code_omit = NULL,   default_values = list(\"No\", 0, as.Date(0)),   predicate_question = NULL,   predicate_question_negative_value = NULL )"},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_define_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill in missing and non-missing values across interrelated survey questions — qualtrics_define_missing","text":"df dataframe survey responses question_code_include regex matches columns include missing non-missing value imputation question_code_omit regex matches columns omit missing non-missing value imputation default_values list length three, specifying default, non-missing values used character, numeric, Date columns, respectively predicate_question Optional. name single column controls whether columns selected question_code_include predicate_question_negative_value predicate_question specified, provide value indicates negative response predicate question. responses predicate question value, value imputed specified columns","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_define_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill in missing and non-missing values across interrelated survey questions — qualtrics_define_missing","text":"inputted df object missing/non-missing values applied specified columns","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_format_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Qualtrics metadata — qualtrics_format_metadata","title":"Prep Qualtrics metadata — qualtrics_format_metadata","text":"Prep Qualtrics metadata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_format_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Qualtrics metadata — qualtrics_format_metadata","text":"","code":"qualtrics_format_metadata(metadata, sections = c(), text_replace = \"zzzzz\")"},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_format_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Qualtrics metadata — qualtrics_format_metadata","text":"metadata dataframe containing unprocessed metadata Qualtrics API sections named vector specifying last question number survey section text_replace named character vector regex patterns replace metadata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_format_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Qualtrics metadata — qualtrics_format_metadata","text":"dataframe formatted metadata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Qualtrics metadata — qualtrics_get_metadata","title":"Access Qualtrics metadata — qualtrics_get_metadata","text":"Access Qualtrics metadata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Qualtrics metadata — qualtrics_get_metadata","text":"","code":"qualtrics_get_metadata(   metadata,   question_name = NULL,   survey_section = NULL,   return_values = \"text_sub\" )"},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access Qualtrics metadata — qualtrics_get_metadata","text":"metadata dataframe containing Qualtrics metadata question_name regex pattern match question name(s) survey_section regex pattern match survey section(s) return_values name column (character) returned","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access Qualtrics metadata — qualtrics_get_metadata","text":"character vector requested metadata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_plot_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot responses to Qualtrics survey questions — qualtrics_plot_question","title":"Plot responses to Qualtrics survey questions — qualtrics_plot_question","text":"Plot responses Qualtrics survey questions","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_plot_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot responses to Qualtrics survey questions — qualtrics_plot_question","text":"","code":"qualtrics_plot_question(   df,   metadata,   question_code_include,   question_code_omit = \"zzzzz\",   question_type,   title = \"\",   subtitle = NULL,   subtitle_replace = c(`\\\\[Field.*\\\\]` = \"your community\",     `Your best estimate is fine\\\\.` = \"\"),   text_remove = \"please describe|please specify\",   text_replace = c(a = \"a\"),   omit_other = TRUE )"},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_plot_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot responses to Qualtrics survey questions — qualtrics_plot_question","text":"df dataframe survey responses metadata dataframe Qualtrics metadata question_code_include regex matches question codes include plot question_code_omit regex matches question codes omit plot question_type one c(\"continuous\", \"checkbox_single\", \"checkbox_multi\", \"checkbox_factor\") title Plot title subtitle Plot subtitle subtitle_replace named character vector regex patterns replace subtitle text_remove regex pattern select response options exclude plot text_replace named character vector regex patterns replace response text omit_other Logical; whether omit \"\" response option. Default TRUE.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/qualtrics_plot_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot responses to Qualtrics survey questions — qualtrics_plot_question","text":"ggplot object","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_ipums_micro_cached.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cached IPUMS microdata — read_ipums_micro_cached","title":"Read cached IPUMS microdata — read_ipums_micro_cached","text":"Read cached IPUMS microdata","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_ipums_micro_cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cached IPUMS microdata — read_ipums_micro_cached","text":"","code":"read_ipums_micro_cached(   filename,   download_directory,   extract_definition,   refresh = FALSE )"},{"path":"https://ui-research.github.io/climateapi/reference/read_ipums_micro_cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cached IPUMS microdata — read_ipums_micro_cached","text":"filename name file (full file path) download_directory relative path specifying download data extract_definition define_extract_micro() object refresh true, execute API query, even data already stored locally. Defaults FALSE","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_ipums_micro_cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cached IPUMS microdata — read_ipums_micro_cached","text":"dataframe corresponding supplied extract_definition","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_ipums_micro_cached.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cached IPUMS microdata — read_ipums_micro_cached","text":"","code":"if (FALSE) { # \\dontrun{ read_ipums_micro_cached(   filename = \"acs_insurance_race_2022_1yr_repweights\",   download_directory = \"data\",   extract_definition = define_micro_extract(     collection = \"usa\",     description = \"2022 ACS 1-year sample with replicate weights - insurance and race\",     samples = c(\"us2022a\"),     variables = list(       \"HCOVANY\",       var_spec(\"RACE\", case_selections = c(\"1\", \"2\")),       \"REPWT\"),   refresh = FALSE)) } # }"},{"path":"https://ui-research.github.io/climateapi/reference/read_xlsx_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a .xlsx file(s) from a URL(s) — read_xlsx_from_url","title":"Download a .xlsx file(s) from a URL(s) — read_xlsx_from_url","text":"Download .xlsx file(s) URL(s)","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_xlsx_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a .xlsx file(s) from a URL(s) — read_xlsx_from_url","text":"","code":"read_xlsx_from_url(urls, directory, file_names = NULL, silent = TRUE)"},{"path":"https://ui-research.github.io/climateapi/reference/read_xlsx_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a .xlsx file(s) from a URL(s) — read_xlsx_from_url","text":"urls character vector URLs length one greater directory path single directory–file–.xlsx file(s) saved file_names Optionally, character vector length urls containing file names (full paths) downloaded files named. NULL (default), file names extracted urls. silent TRUE (default), files saved silently. FALSE, downloaded files read returned list.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/read_xlsx_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a .xlsx file(s) from a URL(s) — read_xlsx_from_url","text":"Either nothing (silent == TRUE) list dataframes specified URLs.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/subdivide_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Subdivide a linestring into segments of a specified length — subdivide_linestring","title":"Subdivide a linestring into segments of a specified length — subdivide_linestring","text":"Subdivide linestring segments specified length","code":""},{"path":"https://ui-research.github.io/climateapi/reference/subdivide_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subdivide a linestring into segments of a specified length — subdivide_linestring","text":"","code":"subdivide_linestring(line, max_length, crs = 5070)"},{"path":"https://ui-research.github.io/climateapi/reference/subdivide_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subdivide a linestring into segments of a specified length — subdivide_linestring","text":"line linestring simple feature collection thereof max_length maximum length segment. Segments longer value subdivided; threshold returned -. crs coordinate reference system linestring transformed. Default 5070.","code":""},{"path":"https://ui-research.github.io/climateapi/reference/subdivide_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subdivide a linestring into segments of a specified length — subdivide_linestring","text":"spatial dataframe comprising linestrings max_length threshold, linked back input linestrings via line_id attribute","code":""},{"path":[]},{"path":"https://ui-research.github.io/climateapi/news/index.html","id":"v0009001-development-version","dir":"Changelog","previous_headings":"","what":"v0.0.0.9001","title":"climateapi (development version)","text":"Updating README Reorganizing References Adding business patterns data","code":""}]
